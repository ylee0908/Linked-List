# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> ListNode:Time O(m+n) space O(1)
        if headA is None or headB is None:
            return None
        
        a = headA
        b = headB
        
        while a != b:
            if a != None:
                a = a.next
            else:
                a = headB
            if b != None:
                b = b.next
            else:
                b = headA
        return a
        
        
    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> ListNode:#TimeO(m+n) SpaceO(n)
        seen = set()
        a= headA
        b= headB
        while a:
            seen.add(a)
            a = a.next
        while b:
            if b in seen:
                return b
            b = b.next
