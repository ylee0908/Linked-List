lass Solution:
  
    def hasCycle(self, head: ListNode) -> bool:
        if head is None or head.next is None:
            return False
        
        slow = head
        fast = head.next
        
        while slow != fast:
            if fast == None or fast.next==None:
                return False
            slow = slow.next
            fast = fast.next.next
        return True

  def hasCycle(self, head: ListNode) -> bool:
          seen = set()
          while head:
              if head in seen:
                  return True
              else:
                  seen.add(head)
              head = head.next
          return False
